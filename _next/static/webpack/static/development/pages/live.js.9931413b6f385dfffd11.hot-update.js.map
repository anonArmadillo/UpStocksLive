{"version":3,"file":"static/webpack/static\\development\\pages\\live.js.9931413b6f385dfffd11.hot-update.js","sources":["webpack:///./components/Live/Live.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Chart from \"./Chart\";\r\nimport { getData } from \"./utils\";\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport io from \"socket.io-client\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundPosition: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: \"1.5rem\"\r\n  }\r\n});\r\n\r\nclass Live extends React.Component {\r\n  state = {\r\n    chartData: null,\r\n    sliderValue: 1\r\n  }\r\n\r\n  gotData = chartData => {\r\n    this.setState({chartData});\r\n  }\r\n\r\n  initSock = () => {\r\n    const sock = new io(\"http://kaboom.rksv.net/watch\");\r\n    console.log(sock);\r\n    sock.on(\"data\", res => {\r\n      console.log(data);\r\n    });\r\n    sock.on(\"error\", res => {\r\n      console.log(data);\r\n    });\r\n    sock.on(\"connect\", (a, b) => {\r\n      sock.emit(\"ping\", {});\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    getData(`http://kaboom.rksv.net/api/historical?interval=${this.state.sliderValue}`).then(this.gotData);\r\n    this.initSock()\r\n  }\r\n\r\n  getSnapshotBeforeUpdate = (prevProps, prevState) => {\r\n    console.log(prevProps, prevState);\r\n  }\r\n\r\n  sliderChange = (a, sliderValue) => {\r\n    this.setState({sliderValue})\r\n  }\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    if (this.state.chartData == null) {\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}\r\n    return (\r\n      <div className={classes.root}>\r\n        <Slider\r\n          classes={{ container: classes.slider }}\r\n          value={this.state.sliderValue}\r\n          min={1}\r\n          max={9}\r\n          step={1}\r\n          style={{width: 200, margin: \"1rem\"}}\r\n          onChange={this.sliderChange}\r\n        />\r\n        <Chart data={this.state.chartData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLive.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Live);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AACA;AAUA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxDA;AACA;AA0DA;AACA;AADA;AAIA;;;;A","sourceRoot":""}